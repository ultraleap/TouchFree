{
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },
    "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/resolver": {
            "node": {
                "extensions": [".ts"],
                "moduleDirectory": ["node_modules", "src/"]
            }
        }
    },
    "plugins": ["@typescript-eslint", "spellcheck", "eslint-plugin-tsdoc"],
    "ignorePatterns": ["/dist*", "/release", "build/*", "*_Example.html"],
    "rules": {
        "indent": "off",
        "linebreak-style": "off",
        "quotes": ["error", "single", "avoid-escape"],
        "semi": ["error", "always"],
        "max-len": ["error", { "code": 120 }],
        "spellcheck/spell-checker": [
            1,
            {
                "lang": "en_GB",
                "skipWords": [
                    "touchfree",
                    "touchfreecursor",
                    "bitmask",
                    "umd",
                    "tsx",
                    "chirality",
                    "Ultraleap",
                    "enum",
                    "evt",
                    "plugin",
                    "plugins",
                    "pos",
                    "unregister",
                    "eod",
                    "dist",
                    "errored",
                    "svg",
                    "msg",
                    "guid",
                    "uuidgen",
                    "timeframe",
                    "func",
                    "deadzone",
                    "lerp",
                    "rect",
                    "center",
                    "snapforce",
                    "etc"
                ],
                "skipWordIfMatch": ["^pointer.*$", "(\\S+(32|64)+)"],
                "minLength": 3
            }
        ],
        "@typescript-eslint/ban-types": [
            "error",
            {
                "types": {
                    "{}": false
                },
                "extendDefaults": true
            }
        ],
        "@typescript-eslint/no-empty-interface": "warn",
        "@typescript-eslint/no-unused-vars": ["warn", { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }],
        "@typescript-eslint/no-empty-function": "off",
        "tsdoc/syntax": "warn"
    },
    "globals": { "TouchFree": "readonly", "SnappingPlugin": "readonly" }
}
